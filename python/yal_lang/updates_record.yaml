- releases:
  - version 1.0.1:
    - released 11/20/19
    - info:
      - original release
  - version 1.0.2:
    - released 12/9/19
    - info:
      - The application will go through each file and take out each .yal file
      - Had problems importing one .yal file into another? No need anymore!:
        - all files are compiled at once. This makes it to where you don't need to import one .yal file into another .yal file
        - Think of it like this:
          - 2 files are the application, full of function, classes, etc, and then you have a rendering .yal file where
          - all you have to do is call the class-function or the function, !NO IMPORTING
        - Keep in mind:
          - You still need to import a module name if it isn't a .yal file. The only things you do not need to import
          - are functions or class-functions within a .yal file
  - version 1.0.2.1:
    - released 12/15/19
    - info:
      - resolved pathing issues
      - rendering .yal file is now to be named runner.yal
      - New way of importing the application extras(SEE DOCUMENTATION)
      - Had issues with the directory extras? Not anymore:
        - no matter where the directory extras is, it will be removed and re-downloaded in your active directory
      - More compatible with termux terminal
      - want to add:
        - what if the user writes in one file, then calls the function in another file, then runs both files in the runner.yal
        - would this cause an error or would it compile correctly?
        - is there a way the user could write some python code to help the compiler compile certain files
        - before other?
        - !TODO:
          - is there a way we can make the compiler compile one file before another, or make one file more important then
          - any other?
          - !POSSIBLY:
            - have the user write some python code to compile one file before any other file?
